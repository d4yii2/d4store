<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d4yii2\d4store\models\base;

use Yii;

/**
 * This is the base-model class for table "d4store_product_ref".
 *
 * @property integer $id
 * @property integer $store_product_id
 * @property integer $model_record_id
 * @property integer $ref_type_id
 *
 * @property \d4yii2\d4store\models\D4StoreRefType $refType
 * @property \d4yii2\d4store\models\D4StoreStoreProduct $storeProduct
 * @property string $aliasModel
 */
abstract class D4StoreProductRef extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd4store_product_ref';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['store_product_id', 'model_record_id', 'ref_type_id'], 'required'],
            'tinyint Unsigned' => [['ref_type_id'],'integer' ,'min' => 0 ,'max' => 255],
            'integer Unsigned' => [['id','store_product_id','model_record_id'],'integer' ,'min' => 0 ,'max' => 4294967295],
            [['store_product_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d4yii2\d4store\models\D4StoreStoreProduct::className(), 'targetAttribute' => ['store_product_id' => 'id']],
            [['ref_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d4yii2\d4store\models\D4StoreRefType::className(), 'targetAttribute' => ['ref_type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d4store', 'ID'),
            'store_product_id' => Yii::t('d4store', 'Store Product ID'),
            'model_record_id' => Yii::t('d4store', 'Model Record ID'),
            'ref_type_id' => Yii::t('d4store', 'Ref Type ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRefType()
    {
        return $this->hasOne(\d4yii2\d4store\models\D4StoreRefType::className(), ['id' => 'ref_type_id'])->inverseOf('d4StoreProductRefs');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStoreProduct()
    {
        return $this->hasOne(\d4yii2\d4store\models\D4StoreStoreProduct::className(), ['id' => 'store_product_id'])->inverseOf('d4StoreProductRefs');
    }


    
    /**
     * @inheritdoc
     * @return \d4yii2\d4store\models\D4StoreProductRefQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \d4yii2\d4store\models\D4StoreProductRefQuery(get_called_class());
    }

}
