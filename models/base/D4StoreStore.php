<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d4yii2\d4store\models\base;

use Yii;


/**
 * This is the base-model class for table "d4store_store".
 *
 * @property integer $id
 * @property integer $company_id
 * @property string $name
 * @property string $address
 * @property integer $active
 *
 * @property \d4yii2\d4store\models\D4StoreStack[] $d4storeStacks
 * @property string $aliasModel
 */
abstract class D4StoreStore extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd4store_store';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = [
        ];
        return $behaviors;
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['company_id'], 'required'],
            'tinyint Signed' => [['active'],'integer' ,'min' => -128 ,'max' => 127],
            'smallint Unsigned' => [['id','company_id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['name'], 'string', 'max' => 50],
            [['address'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d4store', 'ID'),
            'company_id' => Yii::t('d4store', 'Company ID'),
            'name' => Yii::t('d4store', 'Store Name'),
            'address' => Yii::t('d4store', 'Store Address'),
            'active' => Yii::t('d4store', 'Active'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints(): array
    {
        return array_merge(parent::attributeHints(), [
            'name' => Yii::t('d4store', 'Store Name'),
            'address' => Yii::t('d4store', 'Store Address'),
            'active' => Yii::t('d4store', 'Active'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD4StoreStacks()
    {
        return $this->hasMany(\d4yii2\d4store\models\D4StoreStack::className(), ['store_id' => 'id'])->inverseOf('store');
    }


    
    /**
     * @inheritdoc
     * @return \d4yii2\d4store\models\D4StoreStoreQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \d4yii2\d4store\models\D4StoreStoreQuery(get_called_class());
    }

}
