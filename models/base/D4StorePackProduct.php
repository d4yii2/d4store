<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d4yii2\d4store\models\base;

use Yii;

/**
 * This is the base-model class for table "d4store_pack_product".
 *
 * @property integer $id
 * @property integer $store_product_id
 * @property integer $pack_id
 *
 * @property \d4yii2\d4store\models\D4StorePackProductHistory[] $d4StorePackProductHistories
 * @property \d4yii2\d4store\models\D4StorePacks $pack
 * @property \d4yii2\d4store\models\D4StoreStoreProduct $storeProduct
 * @property string $aliasModel
 */
abstract class D4StorePackProduct extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd4store_pack_product';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['store_product_id', 'pack_id'], 'required'],
            'integer Unsigned' => [['id','store_product_id','pack_id'],'integer' ,'min' => 0 ,'max' => 4294967295],
            [['pack_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d4yii2\d4store\models\D4StorePacks::className(), 'targetAttribute' => ['pack_id' => 'id']],
            [['store_product_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d4yii2\d4store\models\D4StoreStoreProduct::className(), 'targetAttribute' => ['store_product_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d4store', 'ID'),
            'store_product_id' => Yii::t('d4store', 'Store Product ID'),
            'pack_id' => Yii::t('d4store', 'Pack ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD4storePackProductHistories()
    {
        return $this->hasMany(\d4yii2\d4store\models\D4storePackProductHistory::className(), ['pack_product_id' => 'id'])->inverseOf('packProduct');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPack()
    {
        return $this->hasOne(\d4yii2\d4store\models\D4StorePacks::className(), ['id' => 'pack_id'])->inverseOf('d4StorePackProducts');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStoreProduct()
    {
        return $this->hasOne(\d4yii2\d4store\models\D4storeStoreProduct::className(), ['id' => 'store_product_id'])->inverseOf('D4StorePackProducts');
    }


    
    /**
     * @inheritdoc
     * @return \d4yii2\d4store\models\D4StorePackProductQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \d4yii2\d4store\models\D4StorePackProductQuery(get_called_class());
    }

}
